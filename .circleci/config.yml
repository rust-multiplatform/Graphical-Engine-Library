# To save on build minutes and to reduce complexity 
# we are **only** building for the current host architecture for Windows, Linux and macOS.
# Android and iOS are exceptions here.
#
# We could of course add all of our target architectures
# by simply adding the `--target <rust target>` to the build commands.
# Alternatively, use a build matrix like we did with GitHub.

version: 2.1

orbs: 
  windows: circleci/windows@5.0.0

workflows:
  build:
    jobs:
      - compute_engine_library

jobs:
  compute_engine_library:
    docker:
      - image: cimg/rust:1.65

    steps:
      - checkout
      - run: cargo --version

      # Build
      - run:
          name: Build (debug)
          command: cargo build --package compute_engine_library
      - run:
          name: Build (release)
          command: cargo build --package compute_engine_library --release

      # Tests
      - run:
          name: Run Tests (debug)
          command: cargo test --no-default-features --no-fail-fast --package compute_engine_library
      - run:
          name: Run Tests (release)
          command: cargo test --no-default-features --no-fail-fast --package compute_engine_library --release

      # Upload Artifacts
      - store_artifacts:
          path: target/debug/compute_engine_library
      - store_artifacts:
          path: target/release/compute_engine_library